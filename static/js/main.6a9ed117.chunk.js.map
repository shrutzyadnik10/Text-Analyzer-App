{"version":3,"sources":["components/Navbar.js","components/TextContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","onClick","toggleMode","type","role","id","TextContainer","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","str","split","i","length","substring","join","filter","element","App","setMode","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAEe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,iBAAAC,OAAmBL,EAAMM,KAAzB,QAAAD,OAAoCL,EAAMM,KAA1C,eACZL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAjC,iBACAN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBI,QAASR,EAAMS,WAAYC,KAAK,WAAWC,KAAK,SAASC,GAAG,8BCN3F,SAASC,EAAcb,GACpC,IAD2Cc,EAyBnBC,mBAAS,IAzBUC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAyBpCK,EAzBoCH,EAAA,GAyB9BI,EAzB8BJ,EAAA,GA0B3C,OACEf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAImB,MAAO,CAACC,MAAmB,SAAbvB,EAAMM,KAAc,QAAQ,UAAWN,EAAMwB,SAC/DvB,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAeqB,MAAON,EAAMO,SATjC,SAACC,GAEpBP,EAAQO,EAAMC,OAAOH,QAOyDH,MAAO,CAACO,gBAA6B,SAAb7B,EAAMM,KAAc,UAAU,QAASiB,MAAmB,SAAbvB,EAAMM,KAAc,QAAQ,SAAUM,GAAG,SAASkB,KAAK,MACtM7B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBI,QA9BvB,WACjB,IAAIuB,EAAUZ,EAAKa,cACnBZ,EAAQW,KA4BJ,wBACA9B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBI,QA3BvB,WACjB,IAAIuB,EAAUZ,EAAKc,cACnBb,EAAQW,KAyBJ,wBACA9B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBI,QAxBtB,WAElB,IADA,IAAI0B,EAAMf,EAAKgB,MAAM,KACZC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BF,EAAIE,GAAKF,EAAIE,GAAG,GAAGJ,cAAgBE,EAAIE,GAAGE,UAAU,GAEtDlB,EAAQc,EAAIK,KAAK,QAmBb,yBACAtC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBQ,GAAG,WAAWJ,QAjBtC,WAEhBY,EADc,MAgBV,eAGFnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAImB,MAAO,CAACC,MAAmB,SAAbvB,EAAMM,KAAc,QAAQ,UAA9C,qBACAL,EAAAC,EAAAC,cAAA,KAAGmB,MAAO,CAACC,MAAmB,SAAbvB,EAAMM,KAAc,QAAQ,UAAWa,EAAKgB,MAAM,OAAOK,OAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQJ,SAAgBA,OAA/H,cAAkJlB,EAAKkB,OAAvJ,iBCZOK,MAvBf,WAAe,IAAA5B,EACWC,mBAAS,SADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNR,EADMU,EAAA,GACA2B,EADA3B,EAAA,GAab,OACEf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACEpB,EAAAC,EAAAC,cAACJ,EAAD,CAAQO,KAAMA,EAAMG,WAbL,WACJ,UAATH,GACFqC,EAAQ,QACRC,SAASC,KAAKvB,MAAMO,gBAAkB,YAGtCc,EAAQ,SACRC,SAASC,KAAKvB,MAAMO,gBAAkB,YAOtC5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACU,EAAD,CAAeW,QAAQ,6BAA8BlB,KAAMA,OCXpDwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWhB,SAASiB,eAAe,SACpDC,OACH7D,EAAAC,EAAAC,cAACF,EAAAC,EAAM6D,WAAP,KACE9D,EAAAC,EAAAC,cAAC6D,EAAD,QAOJlB","file":"static/js/main.6a9ed117.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-${props.mode} bg-${props.mode} fixed-top`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">Text Analyzer</a>\r\n        <div className=\"form-check form-switch\">\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextContainer(props) {\r\n  const upperClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  }\r\n  const lowerClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  }\r\n  const capitaLizer = () => {\r\n    let str = text.split(\" \");\r\n    for (let i = 0; i < str.length; i++) {\r\n      str[i] = str[i][0].toUpperCase() + str[i].substring(1);\r\n    }\r\n    setText(str.join(\" \"));\r\n\r\n  }\r\n  const clearText = () => {\r\n    let newText = '';\r\n    setText(newText);\r\n  }\r\n  let handleOnChange = (event) => {\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  }\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1 style={{color:props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#010208':'white', color:props.mode==='dark'?'white':'black'}} id=\"mytext\" rows=\"8\"></textarea>\r\n        <button className=\"btn btn-primary\" onClick={upperClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary\" onClick={lowerClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary\" onClick={capitaLizer}>Convert to Capitalize</button>\r\n        <button className=\"btn btn-primary\" id=\"clearbtn\" onClick={clearText}>Clear Text</button>\r\n\r\n      </div>\r\n      <div className=\"containers my-4\">\r\n        <h2 style={{color:props.mode==='dark'?'white':'black'}}>Your Text Summary</h2>\r\n        <p style={{color:props.mode==='dark'?'white':'black'}}>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Words and {text.length} Characters</p>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextContainer from './components/TextContainer';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#010208';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n\n    }\n  }\n  return (\n    <>\n      <Navbar mode={mode} toggleMode={toggleMode} />\n      <div className=\"container\">\n        <TextContainer heading=\"Enter Your Text to Analyze\"  mode={mode}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}